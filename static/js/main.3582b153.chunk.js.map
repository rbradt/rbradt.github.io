{"version":3,"sources":["logo.svg","UI Controllers/Home.js","Game/Move.js","Game/TTT/TTTGame.js","UI Controllers/TTTGameUI.js","Game/AI.js","UI Controllers/GameSelect.js","App.js","UI Controllers/MovingBanner.js","reportWebVitals.js","index.js"],"names":["Home","props","scrollDelay","DelayFunction","e","onScroll","mouseMoveDelay","onMouseMove","state","shuttle","AnimatedSpaceShuttle","library","add","faLinkedin","faGithubSquare","faSpaceShuttle","window","addEventListener","this","preDelay","focus","pos","innerHeight","scrollTo","top","left","behavior","rmFocus","clearDelay","removeEventListener","setScene","pageYOffset","currShuttle","document","getElementById","getBoundingClientRect","isActive","setState","clientX","clientY","newShuttle","width","height","setActive","className","postDelay","id","aria-label","href","icon","getStyleClass","style","getStyle","onClick","onShuttleClicked","Component","obj","shuttlePos","cursorPos","ssCoords","cursorCoords","angle","active","Array","bool","coord","Math","sqrt","pow","delta","theta","atan","PI","abs","distanceToCursor","angleToCursor","transform","funct","delay","currentDelay","preDelayFunc","setTimeout","postDelayFunc","pauseFunc","clearTimeout","Move","row","col","side","TTTBoard","tttBoard","turn","board","fill","slice","movesIterator","i","data","flag","floor","newMove","TTTGame","gamemode","player","history","observers","gameOver","move","at","callback","info","isUpdateValid","verifyMove","set","TTTEvaluator","evaluate","push","notifyObservers","observer","length","update","weighted","winningIndeces","order","evaluation","getTurn","TTTCellUI","onMouseOver","hover","onMouseOut","nohover","value","TTTBoardUI","isHovered","color","isNewGame","textShadow","onMouseIn","createCell","TTTGameUI","newGame","faUndo","model","getBoard","toOutputBoard","isGameOver","newTurn","gametype","goTo","current","hovered","undoButton","back","Minimax","isPlayerMove","generateTurn","minimax","depth","alpha","beta","maximizer","optimalMove","minmax","resetMoveIterator","nextMove","getNextMove","getMove","GameSelect","setGamemode","returnToSelect","game","faRobot","faUserFriends","faGlobe","faTimes","faDotCircle","faCog","faCircle","index","firstInst","setHovered","display","panelButton","tttAI","addObserver","TTTGameSelectButton","isGSMenu","isLocal","selectedMode","selectedPlayer","j","filter","flexDirection","onMouseEnter","App","scene","faHome","newScene","sceneToRender","setSelected","scrollToScene","renderScene","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3582b153.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {Component} from 'react';\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faLinkedin, faGithubSquare, faCog} from \"@fortawesome/free-brands-svg-icons\";\r\nimport {faSpaceShuttle, faSquareRootAlt} from \"@fortawesome/free-solid-svg-icons\";\r\nimport '../CSS/home.css'\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.scrollDelay = new DelayFunction(e => this.onScroll(e), 200);\r\n        this.mouseMoveDelay = new DelayFunction(e => this.onMouseMove(e), 200);\r\n\r\n        this.state = {\r\n            shuttle: new AnimatedSpaceShuttle()\r\n        }\r\n        \r\n        library.add(faLinkedin, faGithubSquare, faSpaceShuttle);\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('scroll', this.scrollDelay.preDelay());\r\n\r\n        if(this.props.focus != null) {\r\n            let pos = this.props.focus==='nav_home'? 0: window.innerHeight;\r\n            window.scrollTo({top: pos, left: 0, behavior: 'auto'});\r\n            this.props.rmFocus();\r\n        }\r\n    }\r\n        \r\n    componentDidUpdate() {\r\n        if(this.props.focus != null) {\r\n            let pos = this.props.focus==='nav_home'? 0: window.innerHeight;\r\n            window.scrollTo({top: pos, left: 0, behavior: 'smooth'});\r\n            this.props.rmFocus();\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.scrollDelay.clearDelay();\r\n        window.removeEventListener('scroll', this.scrollDelay.preDelay());\r\n    }\r\n\r\n    onScroll(e) {\r\n        this.props.setScene(window.pageYOffset > (window.innerHeight*4/5)? 'nav_about': 'nav_home');\r\n    }\r\n\r\n    onMouseMove(e) {\r\n        let currShuttle = this.state.shuttle;\r\n        let pos = document.getElementById(\"shuttle\").getBoundingClientRect();\r\n        if(currShuttle.isActive())\r\n            this.setState({shuttle: new AnimatedSpaceShuttle(this.state.shuttle, [pos.left, pos.top], [e.clientX, e.clientY])});\r\n    }\r\n\r\n    onShuttleClicked(e) {\r\n        let pos = document.getElementById(\"shuttle\").getBoundingClientRect();\r\n        let newShuttle = new AnimatedSpaceShuttle(this.state.shuttle, [pos.left + pos.width/2, pos.top + pos.height/2], [pos.left + pos.width/2, pos.top + pos.height/2]);\r\n        newShuttle.setActive(!newShuttle.isActive());\r\n        this.setState({shuttle: newShuttle});\r\n    }\r\n\r\n    renderAnimation() {\r\n        // set animation property based off of selected scene\r\n    }\r\n\r\n    render() {  \r\n        return (\r\n            <div className=\"main-container\" onMouseMove={this.mouseMoveDelay.postDelay() /* postDelay w/ 200ms or pause w/ 50ms work here */}>\r\n                <div id=\"home\" className=\"section-wrapper home unselectable\">\r\n                    <h1 className=\"header\">ril<span className=\"flicker1\">e</span>y bradt</h1>\r\n                    <div className=\"content-row home-button-container\">\r\n                        <a aria-label=\"LinkedIn\" href=\"https://www.linkedin.com/in/riley-b-09b8301a5/\"><FontAwesomeIcon icon={[\"fab\", \"linkedin\"]}/></a>\r\n                        <a aria-label=\"GitHub\" href=\"https://github.com/rbradt\"><FontAwesomeIcon icon={[\"fab\", \"github-square\"]}/></a>\r\n                        <a aria-label=\"Shuttle\" id=\"shuttle\" className={this.state.shuttle.getStyleClass()} style={this.state.shuttle.getStyle()} onClick={e => this.onShuttleClicked(e)}>\r\n                            <FontAwesomeIcon icon=\"space-shuttle\"/>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n                <div id=\"about\" className=\"section-wrapper about\">\r\n                    <img></img>\r\n                    <div></div>\r\n                </div>\r\n                <div id=\"projects\" className=\"section-wrapper projects\">\r\n\r\n                </div>\r\n                <p>a</p>\r\n                <div>b</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass AnimatedSpaceShuttle {\r\n    constructor(obj, shuttlePos, cursorPos) {\r\n        if(obj instanceof AnimatedSpaceShuttle) {\r\n            this.ssCoords = shuttlePos;\r\n            this.cursorCoords = cursorPos;\r\n            this.angle = obj.angle;\r\n            this.active = obj.active;\r\n        }\r\n        else {\r\n            this.cursorCoords = cursorPos instanceof Array? cursorPos: [0, 0];\r\n            this.ssCoords = shuttlePos instanceof Array? shuttlePos: [0, 0];\r\n            this.angle = 0;\r\n            this.active = false;\r\n        }\r\n    }\r\n\r\n    isActive() {\r\n        return this.active;\r\n    }\r\n\r\n    setActive(bool) {\r\n        this.active = bool;\r\n    }\r\n\r\n    delta(coord) {return this.cursorCoords[coord] - this.ssCoords[coord]}\r\n    distanceToCursor() {return Math.sqrt(Math.pow(this.delta(0), 2) + Math.pow(this.delta(1), 2));}\r\n    angleToCursor() {\r\n        // inverted signs because css rotates clockwise :/\r\n        let theta   =  this.delta(0) >= 0? this.delta(1) >= 0? /* Q4 (+x and +y) */ Math.atan(this.delta(1)/this.delta(0))*180/Math.PI:\r\n                                                                /* Q1 (+x and -y) */ 360 - Math.atan(-1*this.delta(1)/this.delta(0))*180/Math.PI: \r\n                                            this.delta(1) >= 0? /* Q3 (-x and +y) */ 180 - Math.atan(-1*this.delta(1)/this.delta(0))*180/Math.PI:\r\n                                                                /* Q2 (-x and -y) */ 180 + Math.atan(this.delta(1)/this.delta(0))*180/Math.PI;\r\n        \r\n        // determine angle that will result in the shortest rotational transformation (when using css rotate())\r\n        let delta = theta - this.angle;\r\n        if(Math.abs(delta) > 180)\r\n            theta = this.angle + ((Math.abs(delta%360) <= 180)? delta%360: (delta <= 0? 1: -1)*(360 - Math.abs(delta%360)));\r\n\r\n        return theta;\r\n    }\r\n\r\n    getStyleClass() {\r\n        return (this.active)? \"shuttle-active\": \"\";\r\n    }\r\n\r\n    getStyle() {\r\n        let style = {};\r\n        if(this.active) {  \r\n            if(this.distanceToCursor() > 100) {\r\n                this.angle = this.angleToCursor();\r\n                style={left: this.cursorCoords[0] + \"px\", top: this.cursorCoords[1] + \"px\", transform: \"rotate(\" + this.angle +\"deg)\"};\r\n            }   \r\n            else {\r\n                this.angle = this.angleToCursor();\r\n                style={left: this.ssCoords[0] + \"px\", top: this.ssCoords[1] + \"px\", transform: \"rotate(\" + this.angle +\"deg)\"};\r\n            } \r\n        }\r\n\r\n        return style;\r\n    }\r\n}\r\n\r\n// Reduce polling for event handler functions\r\nclass DelayFunction {\r\n    constructor(funct, delay) {\r\n        this.currentDelay = null;\r\n  \r\n        /* Execute function call after a delay */\r\n        this.preDelayFunc = e => {\r\n            if(this.currentDelay == null)\r\n                this.currentDelay = setTimeout(() => {\r\n                    funct(e);\r\n                    this.currentDelay = null;\r\n                }, delay);\r\n        }\r\n\r\n        /* Execute function call immediately, then delay future calls */\r\n        this.postDelayFunc = e => {\r\n            if(this.currentDelay == null) {\r\n                funct(e);\r\n                this.currentDelay = setTimeout(() => {this.currentDelay = null;}, delay);\r\n            }\r\n        }\r\n\r\n        /* Execute function call after a pause in calls to this function */\r\n        this.pauseFunc = e => {\r\n            clearTimeout(this.currentDelay);\r\n            this.currentDelay = setTimeout(() => funct(e), delay);     \r\n        }\r\n    }\r\n\r\n    preDelay() {return this.preDelayFunc;}\r\n    postDelay(){return this.postDelayFunc;}\r\n    pause(){return this.pauseFunc;}\r\n    getDelay() {return this.currentDelay;}\r\n    clearDelay() {clearTimeout(this.currentDelay);}\r\n}\r\n\r\nexport {Home};","class Move {\r\n    constructor(row, col, side) {\r\n        this.row = row;\r\n        this.col = col;\r\n        this.side = side;\r\n    }\r\n\r\n    getRow() {return this.row;}\r\n    getCol() {return this.col;}\r\n    getSide() {return this.side;}\r\n}\r\n\r\nexport {Move};","import { Move } from \"../Move.js\";\r\n\r\n    /*---------------------------------------------------------------------------------------------------\r\n     *                                        TTTBoard - ttt board model\r\n     *---------------------------------------------------------------------------------------------------*/\r\nclass TTTBoard {\r\n    constructor(tttBoard = null, turn = null) {\r\n        this.board = (tttBoard == null)? Array(9).fill(null) : tttBoard.board.slice();\r\n        this.turn = (turn == null)? 0 : turn;\r\n        this.movesIterator = 0;\r\n    }\r\n\r\n    at(i) {return this.board[i];}\r\n    set(i, data) {this.board[i] = data;}\r\n    getTurn() {return this.turn;}\r\n    toOutputBoard() {return this.board.slice();}\r\n    equals(TTTBoard) {\r\n        let flag = true;\r\n\r\n        for(let i = 0; i < 9; i++)\r\n            if(this.board[i] !== TTTBoard.board[i]) {\r\n                flag = false;\r\n                break;\r\n            }\r\n\r\n        return flag;\r\n    }\r\n\r\n    // iterator for all possible moves from current board state\r\n    resetMoveIterator() {this.movesIterator = -1;}\r\n    getMove() {return new Move(Math.floor(this.movesIterator/3), this.movesIterator%3, this.turn);}\r\n    getNextMove() {\r\n        while(this.board[++this.movesIterator] != null && this.movesIterator < 9){}\r\n\r\n        if(this.movesIterator > 8)\r\n            return null;\r\n\r\n        let newMove = new TTTBoard(this, this.turn + 1);\r\n        newMove.board[this.movesIterator] = (this.turn%2 == 0)? 'X': 'O';\r\n        return newMove;\r\n    }\r\n}\r\n\r\n    /*---------------------------------------------------------------------------------------------------\r\n     *                                      TTTGame - game logic\r\n     *---------------------------------------------------------------------------------------------------*/\r\nclass TTTGame {\r\n    constructor(gamemode, player) {\r\n        this.history = [new TTTBoard()];\r\n        this.turn = 0;\r\n        this.gamemode = gamemode;\r\n        this.player = (gamemode == 0 || player == 2)? null: player;\r\n        this.observers = [];\r\n        this.gameOver = false;\r\n    }\r\n\r\n    verifyMove(move) {\r\n        return !this.gameOver\r\n                && this.history[this.turn].at(move.row*3 + move.col) == null\r\n                && (this.player == null || this.turn%2 == this.player);\r\n    }\r\n\r\n    getBoard() {\r\n        return this.history[this.turn];\r\n    }\r\n\r\n    getTurn() {\r\n        return this.turn;\r\n    }\r\n\r\n    isGameOver() {\r\n        return this.gameOver;\r\n    }\r\n\r\n    isPlayerMove() {\r\n        return this.turn%2 == this.player;\r\n    }\r\n\r\n    // --- Observer pattern ---\r\n    update(callback, info) {\r\n        let isUpdateValid = false;\r\n        \r\n        // add new move\r\n        if(info instanceof Move && (this.verifyMove(info) || callback == null)) {\r\n            let board = new TTTBoard(this.history[this.turn], this.turn + 1);\r\n            board.set(info.row*3 + info.col, this.turn++%2===0? 'X':'O');\r\n            this.gameOver = TTTEvaluator.evaluate(board) !== null;\r\n            this.history.push(board);\r\n            isUpdateValid = true;\r\n        }\r\n        // rollback to previous turn\r\n        else if(typeof info == 'number' && info <= this.turn) {\r\n            this.turn = info < 1? 0: info;\r\n            this.history = this.history.slice(0, this.turn + 1);\r\n            this.gameOver = false;\r\n            isUpdateValid = true;\r\n        }\r\n\r\n        if(callback != null && isUpdateValid)\r\n            this.notifyObservers(callback);\r\n    }\r\n\r\n    addObserver(observer) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    notifyObservers(callback) {\r\n        for(let i = 0; i < this.observers.length; i++)\r\n            this.observers[i].update(callback, this);\r\n    }\r\n}\r\n\r\n    /*---------------------------------------------------------------------------------------------------\r\n     *                  TTTEvaluator - game evaluator w/ weighted gamestate evaluations\r\n     *---------------------------------------------------------------------------------------------------*/\r\nclass TTTEvaluator {\r\n    static winningIndeces = [\r\n            [0,1,2],\r\n            [3,4,5],\r\n            [6,7,8],\r\n            [0,3,6],\r\n            [1,4,7],\r\n            [2,5,8],\r\n            [0,4,8],\r\n            [2,4,6]\r\n        ];\r\n\r\n    static evaluate(TTTBoard, weighted=false) {\r\n        for(let i = 0; i < this.winningIndeces.length; i++) {\r\n            let order = this.winningIndeces[i];\r\n            if(TTTBoard.at(order[0]) != null && TTTBoard.at(order[0]) === TTTBoard.at(order[1]) && TTTBoard.at(order[0]) === TTTBoard.at(order[2])) {\r\n                let evaluation = TTTBoard.at(order[0]) === 'X'? -1: 1;\r\n                return weighted? evaluation*(100 - TTTBoard.getTurn()): evaluation;\r\n            }       \r\n        }\r\n\r\n        return TTTBoard.getTurn()==9? 0: null;\r\n    }\r\n}\r\n\r\nexport{TTTGame, TTTBoard, TTTEvaluator};","import {Component} from 'react';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faUndo} from '@fortawesome/free-solid-svg-icons';\r\nimport {Move} from \"../Game/Move.js\"\r\nimport {TTTEvaluator} from \"../Game/TTT/TTTGame.js\";\r\nimport '../CSS/ttt_board.css';\r\nimport '../CSS/nav.css'\r\n\r\n// Board Controller\r\nclass TTTCellUI extends Component {\r\n\trender() {\r\n\t\treturn (<button className=\"ttt-board-cell\" onClick={this.props.onClick} onMouseOver={this.props.hover} onMouseOut={this.props.nohover} style={this.props.style}> {this.props.value} </button>);\r\n\t}\r\n}\r\n\r\nclass TTTBoardUI extends Component {\r\n\tcreateCell(i) {\r\n\t\tconst newGameMsg = \"TICTACTOE\";\r\n\t\tlet value;\r\n\t\tlet style;\r\n\r\n\t\t\r\n\t\tif(this.props.isHovered[i]) {\r\n\t\t\tvalue = this.props.turn%2===0? 'X':'O';\r\n\t\t\tstyle = {color: \"#0f1011\"};\r\n\t\t}\r\n\t\telse {\r\n\t\t\tvalue = this.props.isNewGame? newGameMsg[i]: this.props.board[i];\r\n\t\t\tstyle = this.props.board[i]==='X' || this.props.isNewGame && Math.floor(i/3) === 1 ? {color: \"#a55463\", textShadow: \"0px 0px 5px #a55463\"}: {color: \"#61dafb\", textShadow: \"0px 0px 5px #ccccff\"}\r\n\t\t}\r\n\r\n\t\treturn (<TTTCellUI value={value}\r\n\t\t\t\t\t\t   onClick={() => this.props.onClick(i)}\r\n\t\t\t\t\t\t   hover={() => this.props.onMouseIn(i)}\r\n\t\t\t\t\t\t   nohover={() => this.props.onMouseOut(i)}\r\n\t\t\t\t\t\t   style={style}/>);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"ttt-board\">\r\n\t\t\t\t<div className=\"ttt-row\">\r\n\t\t\t\t\t{this.createCell(0)}\r\n\t\t\t\t\t{this.createCell(1)}\r\n\t\t\t\t\t{this.createCell(2)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ttt-row\">\r\n\t\t\t\t\t{this.createCell(3)}\r\n\t\t\t\t\t{this.createCell(4)}\r\n\t\t\t\t\t{this.createCell(5)}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"ttt-row\">\r\n\t\t\t\t\t{this.createCell(6)}\r\n\t\t\t\t\t{this.createCell(7)}\r\n\t\t\t\t\t{this.createCell(8)}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nclass TTTGameUI extends Component {\r\n\tconstructor(props) { // IMPORTANT - React strictmode will call constructor and other lifecycle methods multiple times\r\n\t\tsuper(props);\t // \t\t\thttps://reactjs.org/docs/strict-mode.html#detecting-unexpected-side-effects\r\n\t\t\r\n\t\t// this.props.observers // list of observers to be notified of user input on board\r\n\t\t// this.props.gametype  // specifies game type (0 = local, 1 = vsAI, 2 = vsPlayer)\r\n\t\t// this.props.player    // specifies player's turn (X or O)\r\n\t\t// this.props.model\r\n\r\n\t\tthis.state = {\r\n\t\t\tboard: Array(9).fill(null),\r\n\t\t\tisHovered: Array(9).fill(false),\r\n\t\t\tnewGame: true\r\n\t\t};\r\n\r\n\t\tlibrary.add(faUndo);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\r\n\t}\r\n\r\n\ttick() {\r\n\t\tif(/*this.getSide() !==*/ this.props.model.getTurn()%2) {\r\n\t\t\t//poll server - periodically poll server instead of awaiting instruction from an open connection\r\n\t\t}\r\n\t}\r\n\t\r\n\tonClick(i) {\r\n\t\tconst move = new Move(Math.floor(i/3), i%3);\r\n\t\tif(this.props.model.verifyMove(move)) {\r\n\t\t\t// update model\r\n\t\t\tthis.props.model.update(delay => this.update(delay), move);\r\n\t\t\t\r\n\t\t\t// update ui\r\n\t\t\tconst isHovered = this.state.isHovered.slice();\r\n\t\t\tisHovered[i] = false;\r\n\t\t\t\r\n\t\t\tthis.setState({\r\n\t\t\t\tboard: this.props.model.getBoard().toOutputBoard(),\r\n\t\t\t\tisHovered: isHovered,\r\n\t\t\t\tnewGame: false\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\t\r\n\tonMouseIn(i) {\r\n\t\tconst move = new Move(Math.floor(i/3), i%3);\r\n\t\tif(this.props.model.verifyMove(move)) {\r\n\t\t\tconst isHovered = this.state.isHovered.slice();\r\n\t\t\t\r\n\t\t\t// update ui\r\n\t\t\tisHovered[i] = true;\r\n\t\t\tthis.setState({isHovered: isHovered});\r\n\t\t}\r\n\t}\r\n\t\r\n\tonMouseOut(i) {\r\n\t\tconst move = new Move(Math.floor(i/3), i%3);\r\n\t\tif(this.props.model.verifyMove(move)) {\r\n\t\t\tconst isHovered = this.state.isHovered.slice();\r\n\t\t\t\r\n\t\t\t// update ui\r\n\t\t\tisHovered[i] = false;\r\n\t\t\tthis.setState({isHovered: isHovered});\r\n\t\t}\r\n\t}\r\n\t\r\n\tgoTo(turn) {\r\n\t\tthis.props.model.update(delay => this.update(0), turn);\r\n\t\tthis.setState({board: this.props.model.getBoard().toOutputBoard()});\r\n\t}\r\n\r\n\tupdate(delay) {\r\n\t\tsetTimeout(() => this.setState((state, props) => {return {board: props.model.getBoard().toOutputBoard()}}), delay);\r\n\t}\r\n\r\n\tundoButton() {\r\n\t\tlet gameOver = this.props.model.isGameOver();\r\n\t\tlet newTurn = gameOver? 0: this.props.model.getTurn() - (this.props.gametype + 1);\r\n\t\tif(this.props.gametype !== 2) \r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"ttt-undo\" onClick={() => this.goTo(newTurn)}>\r\n\t\t\t\t\t<div>{gameOver? \"Restart\": \"Undo\"}</div>\r\n\t\t\t\t\t<div className=\"ttt-undo-symbol\"><FontAwesomeIcon icon='undo'/></div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst current = this.props.model.getBoard();\r\n\t\tconst hovered = this.state.isHovered;\r\n\t\tconst newGame = this.state.newGame;\r\n\t\t\r\n\t\tlet info  = \"TTT\";\r\n\t\tif(this.props.model.isGameOver()) {\r\n\t\t\tlet evaluation = TTTEvaluator.evaluate(current);\r\n\t\t\tinfo = evaluation === 0? 'Tie': evaluation === -1? 'X Wins': 'O Wins';\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"ttt-game font unselectable\">\r\n\t\t\t\t<div>{info}</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TTTBoardUI isNewGame={newGame} isHovered={hovered} turn={this.props.model.getTurn()} board={current.toOutputBoard()} onClick={i => this.onClick(i)} onMouseIn={i => this.onMouseIn(i)} onMouseOut={i => this.onMouseOut(i)}/>\r\n\t\t\t\t</div>\r\n\t\t\t\t{this.undoButton()}\r\n\t\t\t\t<div className=\"nav-back\" onClick={this.props.back}><span>back</span></div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {TTTGameUI};\r\n","import { Move } from \"./Move.js\";\r\n\r\nclass AI {\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    addObserver(observer) {\r\n        this.observers.push(observer);\r\n    }\r\n\r\n    notifyObservers(move) {\r\n        for(let i = 0; i < this.observers.length; i++)\r\n            this.observers[i].update(null, move);\r\n    }\r\n\r\n    update(callback, model) {return null;}\r\n}\r\n\r\nclass Minimax extends AI {\r\n    constructor(evaluate) {\r\n        super();\r\n        this.evaluate = evaluate;\r\n    }\r\n\r\n    update(callback, model) {\r\n        if(!(model.isPlayerMove() || model.isGameOver())) {\r\n            // update model\r\n            setTimeout(()=>this.notifyObservers(this.generateTurn(model.getBoard())), 1);\r\n\r\n            // update UI\r\n            callback(200);\r\n        }\r\n    }\r\n\r\n    generateTurn(board) {\r\n        return this.minimax(board, 0, -1000, 1000, board.getTurn()%2 == 1);\r\n    }\r\n\r\n    minimax(board, depth, alpha, beta, maximizer) {\r\n        let optimalMove = null;\r\n\r\n        // return evaluation of final board state \r\n        let value = this.evaluate(board);\r\n        if(value != null)\r\n            return value;\r\n\r\n        let minmax = (maximizer)? -1000: 1000;\r\n        board.resetMoveIterator();\r\n        let nextMove = board.getNextMove();\r\n        while(nextMove != null) {\r\n            // recurse on possible move                                    \r\n            value = this.minimax(nextMove, depth + 1, alpha, beta, !maximizer);  \r\n\r\n            // update max/min\r\n            if((maximizer && minmax < value) || (!maximizer && minmax > value)) {   \r\n                minmax = value;\r\n                if(depth == 0)\r\n                    optimalMove = board.getMove();\r\n            }\r\n\r\n            // prune \r\n            if(maximizer && value > alpha) \r\n                alpha = value;\r\n            if(!maximizer && value < beta)\r\n                beta = value;\r\n            if(beta <= alpha)\r\n                break;\r\n\r\n            nextMove = board.getNextMove();\r\n        }\r\n\r\n        if(depth == 0)\r\n            minmax = optimalMove;\r\n\r\n        return minmax;\r\n    }\r\n}\r\n\r\nexport {Minimax};","import {TTTGameUI} from \"./TTTGameUI.js\"\r\nimport {TTTGame, TTTEvaluator} from \"../Game/TTT/TTTGame.js\"\r\nimport {Minimax} from \"../Game/AI.js\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\r\nimport {faRobot, faUserFriends, faGlobe, faTimes, faDotCircle, faCog} from \"@fortawesome/free-solid-svg-icons\";\r\nimport {faCircle} from \"@fortawesome/free-regular-svg-icons\";\r\nimport { Component } from \"react\";\r\nimport '../CSS/game_select.css'\r\nimport '../CSS/nav.css'\r\n\r\nclass GameSelect extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.game = null;\r\n        this.state = {\r\n            gamemode: -1,\r\n            player: -1,\r\n            hovered: 0\r\n        }\r\n        \r\n        library.add(faRobot, faUserFriends, faGlobe, faTimes, faDotCircle, faCog, faCircle);\r\n    }\r\n\r\n    setGamemode = (gamemode, player) => this.setState({gamemode: gamemode, player: player});\r\n\r\n    back = () => this.setState({gamemode: -1});\r\n\r\n    returnToSelect = () => this.setState(\r\n            (state, props) => {\r\n                return state.gamemode==0? {gamemode: -1, player: -1, hovered: 0}: {player: -1, hovered: 0};\r\n            }\r\n        );\r\n\r\n    setHovered(i) {\r\n        if(this.state.hovered != i)\r\n            this.setState({hovered: i});\r\n    }\r\n\r\n    panelButton(index) {\r\n        switch(this.props.game) {\r\n            case \"ttt\":\r\n                return <TTTGameSelectButton i={index} gamemode={this.state.gamemode} hovered={this.state.hovered} firstInst={this.state.firstInst} setHovered={() => this.setHovered(index)} onClick={this.setGamemode}/>;\r\n            case \"chess\":\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const gamemode = this.state.gamemode;\r\n        const player = this.state.player;\r\n        let display;\r\n\r\n        if(player == -1)\r\n            display = (\r\n                <div className=\"gs-container\">\r\n                    {(gamemode == -1)? null: <div className=\"nav-back\" onClick={() => this.back()}><span>back</span></div>}\r\n                    <div className=\"game-select unselectable\"> \r\n                        {this.panelButton(0)}\r\n                        {this.panelButton(1)}\r\n                        {this.panelButton(2)}\r\n                    </div>\r\n                </div>\r\n            );\r\n        else if(this.props.game === \"ttt\") {\r\n            this.game = new TTTGame(gamemode, player);\r\n            switch(gamemode*3 + player) {\r\n                case 3:\r\n                case 4:\r\n                case 5:\r\n                    display = <div>ai vs ai</div>;\r\n                    let tttAI = new Minimax((board) => TTTEvaluator.evaluate(board, true));\r\n                    tttAI.addObserver(this.game);\r\n                    this.game.addObserver(tttAI);\r\n                case 0:\r\n                case 1:  \r\n                case 2:\r\n                    display = <TTTGameUI gametype={gamemode} model={this.game} back={this.returnToSelect} />;\r\n                    break;\r\n                case 6:\r\n                case 7:\r\n                    display =<div>loading screen/login</div>;\r\n                    break;\r\n                case 8:\r\n                    display =<div>custom lobby</div>;   \r\n                    break;\r\n            }   \r\n        }\r\n            \r\n        return display;\r\n    }\r\n}\r\n\r\nclass TTTGameSelectButton extends Component {\r\n    render() {\r\n        const icons = ['user-friends', 'robot', 'globe','times','robot','robot','times','dot-circle','cog'];\r\n        const gamemodes = ['Local', 'VS Computer', 'Online','vs','vs','vs','Quick Match', 'Quick Match', 'Custom Match'];\r\n        const aiIcons = ['robot', 'dot-circle', 'robot'];\r\n\r\n        const isGSMenu = this.props.gamemode == -1;\r\n        const isLocal = this.props.i == 0;\r\n        const selectedMode = isGSMenu? this.props.i: this.props.gamemode;\r\n        const selectedPlayer = isGSMenu? isLocal? 0: -1: this.props.i;\r\n        const j = isGSMenu? this.props.i: this.props.i + this.props.gamemode*3;\r\n\r\n        let style;\r\n        if(this.props.hovered == this.props.i)\r\n            style = this.props.gamemode==1? {filter: \"none\", flexDirection: \"row\"}: {filter: \"none\", flexDirection: \"column\"};\r\n        else\r\n            style = this.props.gamemode==1? {filter: \"blur(10px)\", flexDirection: \"row\"}: {filter: \"blur(10px)\", flexDirection: \"column\"};\r\n\r\n        return(\r\n            <div className=\"game-select-panel\" style={style} onMouseEnter={this.props.setHovered} onClick={() => this.props.onClick(selectedMode, selectedPlayer)}>\r\n                <FontAwesomeIcon icon={icons[j]}/>\r\n                <div>{gamemodes[j]}</div>\r\n                {this.props.gamemode==1? <FontAwesomeIcon icon={aiIcons[this.props.i]}/>: null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport {GameSelect};","import logo from './logo.svg';\nimport {Component} from 'react';\nimport {Home} from './UI Controllers/Home';\nimport {GameSelect} from './UI Controllers/GameSelect';\nimport {MovingBanner} from './UI Controllers/MovingBanner';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {library} from \"@fortawesome/fontawesome-svg-core\";\nimport {faHome } from '@fortawesome/free-solid-svg-icons';\nimport './CSS/App.css';\nimport './CSS/nav.css';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tscene: 'nav_home',\n\t\t\tgoTo: 'nav_home'\n\t\t};\n\t\tlibrary.add(faHome);\n\t}\n\n\tsetScene(newScene) {\n\t\tif(this.state.scene !== newScene)\n\t\t\tthis.setState({scene: newScene, goTo: null});\n\t}\n\n\tscrollToScene(newScene) {\n\t\tthis.setState({scene: newScene, goTo: newScene});\n\t}\n\n\trenderScene(scene) {\n\t\tlet sceneToRender;\n\n\t\tswitch(scene) {\n\t\t\tcase 'nav_ttt':\n\t\t\t\tsceneToRender = <GameSelect game=\"ttt\" />;\n\t\t\t\tbreak;\n\t\t\tcase 'nav_chess':\n\t\t\t\tbreak;\n\t\t\tcase 'nav_login':\n\t\t\t\tbreak;\n\t\t\tcase 'nav_support':\n\t\t\t\tbreak;\n\t\t\tcase 'nav_about':\n\t\t\tcase 'nav_coming':\n\t\t\tcase 'nav_home':\n\t\t\t\tsceneToRender = <Home focus={this.state.goTo} scene={this.state.scene} setScene={scene => this.setScene(scene)} rmFocus={()=>this.setState({goTo: null})} />;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\t/*sceneToRender = (<MovingBanner scene={\n\t\t\t\t\t<div className=\"App\">\n\t\t\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\tEdit <code>src/App.js</code> and save to reload.\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\tclassName=\"App-link\"\n\t\t\t\t\t\t\t\thref=\"https://reactjs.org\"\n\t\t\t\t\t\t\t\ttarget=\"_blank\"\n\t\t\t\t\t\t\t\trel=\"noopener noreferrer\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tLearn React\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</header>\n\t\t\t\t\t</div>\n\t\t\t\t} />);*/\n\t\t}\n\n\t\treturn sceneToRender;\n\t}\n\n\tsetSelected(id) {\n\t\treturn id == this.state.scene? {color: '#ffffff', filter: \"drop-shadow(0 0 1px white) drop-shadow(0 0 2px red)\"}: {};\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"nav-container\">\n\t\t\t\t<div id=\"nav\" className=\"nav-panel\">\n\t\t\t\t\t<button id=\"nav_home\" className=\"nav-button nav-icon\" style={this.setSelected(\"nav_home\")} aria-label=\"Home\" onClick={() => this.scrollToScene('nav_home')}><FontAwesomeIcon icon=\"home\" /></button>\n\t\t\t\t\t<button id=\"nav_ttt\" className=\"nav-button\" style={this.setSelected(\"nav_ttt\")} onClick={() => this.setScene('nav_ttt')}>Tic-Tac-Toe</button>\n\t\t\t\t\t<button id=\"nav_chess\" className=\"nav-button\" style={this.setSelected(\"nav_chess\")} onClick={() => this.setScene('nav_chess')}>Chess</button>\n\t\t\t\t\t<button id=\"nav_coming\" className=\"nav-button\" style={this.setSelected(\"nav_coming\")} onClick={() => this.scrollToScene('nav_coming')}>Projects</button>\n\t\t\t\t\t<button id=\"nav_login\" className=\"nav-button tr\" style={this.setSelected(\"nav_login\")} onClick={() => this.setScene('nav_login')}>Login</button>\n\t\t\t\t\t<button id=\"nav_support\" className=\"nav-button tr\" style={this.setSelected(\"nav_support\")} onClick={() => this.setScene('nav_support')}>Support</button>\n\t\t\t\t\t<button id=\"nav_about\" className=\"nav-button tr\" style={this.setSelected(\"nav_about\")} onClick={() => this.scrollToScene('nav_about')}>About</button>\n\t\t\t\t</div>\n\t\t\t\t<div id=\"scene\" className=\"nav-scene\">{this.renderScene(this.state.scene)}</div>\n\t\t\t</div>\n\t\t);\t\n\t}\n  \t\n}\n\nexport default App;\n","import {Component} from 'react';\r\nimport '../CSS/moving_banner.css';\r\n\r\nclass MovingBanner extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t}\r\n\r\n\tbanner(alt) {\r\n\t\treturn (\r\n\t\t\t<div className=\"banner\">\r\n\t\t\t\t<div className={\"pane \" + (alt? \"right\": \"left\")}>\r\n\t\t\t\t\t<div>RILEY BRADT </div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"banner-container\">\r\n\t\t\t\t{this.banner(false)}\r\n\t\t\t\t<div className=\"main-scene\">{this.props.scene}</div>\r\n\t\t\t\t{this.banner(true)}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport {MovingBanner};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}